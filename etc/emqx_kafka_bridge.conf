##--------------------------------------------------------------------
## Kafka Plugin
##--------------------------------------------------------------------

## kafka broker
##
## value：host:port
emqx.kafka.bridge.broker = 10.16.13.163:9092,10.16.12.56:9092,10.16.12.76:9092

## kafka topic partition
##
## value：number
emqx.kafka.bridge.partition = 1

## kafka client config
## 
## value: Option: OptionValue
## falg: option value type need to be atom
## integer: option value type need to be integer
## string: option value type need to be string  [emqx.kafka.bridge.client.string]

## auto_start_producers (optional, default=false)
##     If true, brod client will spawn a producer automatically when
##     user is trying to call `produce' but did not call `brod:start_producer'
##     explicitly. Can be useful for applications which don't know beforehand
##     which topics they will be working with.

## allow_topic_auto_creation (optional, default=true)
##     By default, brod respects what is configured in broker about
##     topic auto-creation. i.e. whatever `auto.create.topics.enable'
##     is set in broker configuration.

## query_api_versions (optional, default=true)
##     Must be set to false to work with kafka versions prior to 0.10,
##     When set to `true', at connection start, brod will send a query request
##     to get the broker supported API version ranges.
##     When set to 'false', brod will alway use the lowest supported API version
##     when sending requests to kafka.
emqx.kafka.bridge.client.flag = auto_start_producers:true, allow_topic_auto_creation:false, query_api_versions:true

## reconnect_cool_down_seconds (optional, default=1):
##  	Delay this configured number of seconds before retrying to
##  	estabilish a new connection to the kafka partition leader.

## get_metadata_timeout_seconds(optional, default=5):
## 		Return `{error, timeout}' from `brod_client:get_xxx' calls if
##      responses for APIs such as `metadata', `find_coordinator'
##      is not received in time.

## restart_delay_seconds (optional, default=10):
##  	How much time to wait between attempts to restart brod_client
##      process when it crashes
emqx.kafka.bridge.client.integer = reconnect_cool_down_seconds:10,get_metadata_timeout_seconds:5,restart_delay_seconds:10

## emq regex
emqx.kafka.bridge.regex = ^/(sys|user)/(\S+)/(\S+)/(\S+)*$

## emq topics that need to be forwarded
##
## value:  EmqTopic: KafkaTopic
emqx.kafka.bridge.topic = sys:test, client:saas_client_downstream, paas: paas_sqdata_upstream

## Bridge Kafka Hooks
## ${topic}: the kafka topics to which the messages will be published.
## ${filter}: the mqtt topic (may contain wildcard) on which the action will be performed .
emqx.kafka.bridge.hook.client.connected.topic     = mqtt_client_connected
emqx.kafka.bridge.hook.client.disconnected.topic  = mqtt_client_disconnected
emqx.kafka.bridge.hook.client.subscribed.topic    = mqtt_client_subscribed
